set nocompatible
filetype indent plugin on
syntax on

set autoindent                 " Minimal automatic indenting for any filetype.
set backspace=indent,eol,start " Proper backspace behavior.
set hidden                     " Possibility to have more than one unsaved buffers.
set incsearch                  " Incremental search, hit `<CR>` to stop.
set ruler                      " Shows the current line number at the bottom-right
                               " of the screen.
set wildmenu                   " Great command-line completion, use `<Tab>` to move
                               " around and `<CR>` to validate.
set noerrorbells
set tabstop=2 softtabstop=2
set shiftwidth=2
set expandtab
set smartindent
set relativenumber
set smartcase
set noswapfile
set nobackup
set undodir=~/.vim/undodir
set undofile
set laststatus=2
set splitbelow
set hlsearch
set scrolloff=8
set wrap linebreak
set showbreak=" "
set cursorline
set colorcolumn=80
highlight ColorColumn ctermbg=0 guibg=lightgrey

" Plugins
:so ~/.vim/plugin/matchit.vim

call plug#begin('~/.vim/plugged')
Plug 'jremmen/vim-ripgrep'
Plug 'tpope/vim-fugitive'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'mbbill/undotree'
Plug 'dense-analysis/ale'
Plug 'dracula/vim', {'as': 'dracula'}
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'christoomey/vim-tmux-navigator'
call plug#end()

colorscheme dracula

if executable('rg')
  let g:rg_derive_root = 'true'
endif

let mapleader = "\<Space>"
let g:netrw_browse_split = 5
let g:netrw_banner = 0
let g:netrw_winsize = 25
let g:netrw_liststyle = 3

 let g:ale_linters = {
\   'go': ['gopls'],
\   'javascript': ['eslint'],
\   'typescript': ['eslint', 'tsserver'],
\}

let g:ale_fixers = {
\ '*': ['remove_trailing_lines', 'trim_whitespace'],
\   'javascript': ['prettier','eslint'],
\   'typescript': ['prettier', 'eslint'],
\}

let g:ale_typescript_prettier_use_local_config = 1
let g:ale_completion_tsserver_autoimport = 1
let g:ale_fix_on_save = 1
let g:colorizer_auto_filetype='css'
let g:tmux_navigator_no_mappings = 1
" because i dont have access to vim 8.2 on debian 10
let g:coc_disable_startup_warning = 1

" Set coc to complete on tab
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
nnoremap <C-p> :GFiles <CR>
nnoremap <silent> <leader>h :TmuxNavigateLeft<cr>
nnoremap <silent> <leader>j :TmuxNavigateDown<cr>
nnoremap <silent> <leader>k :TmuxNavigateUp<cr>
nnoremap <silent> <leader>l :TmuxNavigateRight<cr>
nnoremap <leader>u :UndotreeShow<CR>
nnoremap <leader>ps :Rg<CR>
nmap <leader>gd <Plug>(coc-definition)
nmap <leader>gr <Plug>(coc-references)
